apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-master
  namespace: fraud-detection
  labels:
    app: redis
    role: master
    component: cache
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
      role: master
  template:
    metadata:
      labels:
        app: redis
        role: master
    spec:
      containers:
      - name: redis
        image: redis:7.0-alpine
        ports:
        - containerPort: 6379
          name: redis
        command:
        - redis-server
        args:
        - /etc/redis/redis.conf
        - --appendonly
        - "yes"
        env:
        - name: REDIS_REPLICATION_MODE
          value: master
        resources:
          requests:
            memory: "1Gi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "500m"
        volumeMounts:
        - name: redis-data
          mountPath: /data
        - name: redis-config
          mountPath: /etc/redis
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-data-pvc
      - name: redis-config
        configMap:
          name: redis-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-replica
  namespace: fraud-detection
  labels:
    app: redis
    role: replica
    component: cache
spec:
  replicas: 2
  selector:
    matchLabels:
      app: redis
      role: replica
  template:
    metadata:
      labels:
        app: redis
        role: replica
    spec:
      containers:
      - name: redis
        image: redis:7.0-alpine
        ports:
        - containerPort: 6379
          name: redis
        command:
        - redis-server
        args:
        - /etc/redis/redis.conf
        - --replicaof
        - redis-master-service
        - "6379"
        env:
        - name: REDIS_REPLICATION_MODE
          value: replica
        resources:
          requests:
            memory: "512Mi"
            cpu: "125m"
          limits:
            memory: "1Gi"
            cpu: "250m"
        volumeMounts:
        - name: redis-config
          mountPath: /etc/redis
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: redis-config
        configMap:
          name: redis-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: fraud-detection
data:
  redis.conf: |
    # Redis configuration for fraud detection system
    
    # Network settings
    bind 0.0.0.0
    port 6379
    tcp-backlog 511
    tcp-keepalive 300
    
    # General settings
    daemonize no
    supervised no
    pidfile /var/run/redis.pid
    loglevel notice
    logfile ""
    databases 16
    
    # Persistence settings
    save 900 1
    save 300 10
    save 60 10000
    stop-writes-on-bgsave-error yes
    rdbcompression yes
    rdbchecksum yes
    dbfilename dump.rdb
    dir /data
    
    # Append only file settings
    appendonly yes
    appendfilename "appendonly.aof"
    appendfsync everysec
    no-appendfsync-on-rewrite no
    auto-aof-rewrite-percentage 100
    auto-aof-rewrite-min-size 64mb
    aof-load-truncated yes
    
    # Memory management
    maxmemory-policy allkeys-lru
    
    # Security
    # requirepass your-redis-password
    
    # Replication settings
    replica-serve-stale-data yes
    replica-read-only yes
    repl-diskless-sync no
    repl-diskless-sync-delay 5
    repl-ping-replica-period 10
    repl-timeout 60
    repl-disable-tcp-nodelay no
    repl-backlog-size 1mb
    repl-backlog-ttl 3600
    
    # Performance tuning
    timeout 300
    tcp-keepalive 300
    
    # Fraud detection specific settings
    # Optimized for high throughput and low latency
    hash-max-ziplist-entries 512
    hash-max-ziplist-value 64
    list-max-ziplist-size -2
    list-compress-depth 0
    set-max-intset-entries 512
    zset-max-ziplist-entries 128
    zset-max-ziplist-value 64
    
    # Client output buffer limits
    client-output-buffer-limit normal 0 0 0
    client-output-buffer-limit replica 256mb 64mb 60
    client-output-buffer-limit pubsub 32mb 8mb 60
    
    # Slow log
    slowlog-log-slower-than 10000
    slowlog-max-len 128
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-data-pvc
  namespace: fraud-detection
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi