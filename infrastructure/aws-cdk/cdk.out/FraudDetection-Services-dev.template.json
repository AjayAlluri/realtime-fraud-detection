{
 "Description": "Fraud Detection System - DEV",
 "Resources": {
  "RdsKmsKeyF7C5ADFA": {
   "Type": "AWS::KMS::Key",
   "Properties": {
    "KeyPolicy": {
     "Statement": [
      {
       "Action": "kms:*",
       "Effect": "Allow",
       "Principal": {
        "AWS": "arn:aws:iam::527540700703:root"
       },
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "KMS key for RDS encryption",
    "EnableKeyRotation": true
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "FraudDetection-Services-dev/RdsKmsKey/Resource"
   }
  },
  "S3KmsKey80A4BFE7": {
   "Type": "AWS::KMS::Key",
   "Properties": {
    "KeyPolicy": {
     "Statement": [
      {
       "Action": "kms:*",
       "Effect": "Allow",
       "Principal": {
        "AWS": "arn:aws:iam::527540700703:root"
       },
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "KMS key for S3 encryption",
    "EnableKeyRotation": true
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "FraudDetection-Services-dev/S3KmsKey/Resource"
   }
  },
  "DataLakeBucket0256EA8E": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "SSEAlgorithm": "AES256"
       }
      }
     ]
    },
    "BucketName": "fraud-detection-data-lake-dev-527540700703",
    "LifecycleConfiguration": {
     "Rules": [
      {
       "Id": "TransitionToIA",
       "Status": "Enabled",
       "Transitions": [
        {
         "StorageClass": "STANDARD_IA",
         "TransitionInDays": 30
        },
        {
         "StorageClass": "GLACIER",
         "TransitionInDays": 90
        },
        {
         "StorageClass": "DEEP_ARCHIVE",
         "TransitionInDays": 365
        }
       ]
      }
     ]
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    },
    "VersioningConfiguration": {
     "Status": "Enabled"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "FraudDetection-Services-dev/DataLakeBucket/Resource"
   }
  },
  "ModelBucketB33D855B": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "SSEAlgorithm": "AES256"
       }
      }
     ]
    },
    "BucketName": "fraud-detection-models-dev-527540700703",
    "LifecycleConfiguration": {
     "Rules": [
      {
       "Id": "ModelVersioning",
       "NoncurrentVersionExpiration": {
        "NoncurrentDays": 90
       },
       "Status": "Enabled"
      }
     ]
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    },
    "VersioningConfiguration": {
     "Status": "Enabled"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "FraudDetection-Services-dev/ModelBucket/Resource"
   }
  },
  "DbSubnetGroup": {
   "Type": "AWS::RDS::DBSubnetGroup",
   "Properties": {
    "DBSubnetGroupDescription": "Subnet group for fraud detection RDS cluster",
    "SubnetIds": [
     {
      "Fn::ImportValue": "FraudDetection-EKS-dev:ExportsOutputRefFraudDetectionVPCDatabaseSubnet1Subnet5B83D15B97E9954F"
     },
     {
      "Fn::ImportValue": "FraudDetection-EKS-dev:ExportsOutputRefFraudDetectionVPCDatabaseSubnet2SubnetE0846FBEF406006B"
     },
     {
      "Fn::ImportValue": "FraudDetection-EKS-dev:ExportsOutputRefFraudDetectionVPCDatabaseSubnet3Subnet8538E471F5E8A750"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "FraudDetection-Services-dev/DbSubnetGroup/Default"
   }
  },
  "DbSecurityGroupE9D701AD": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Security group for fraud detection RDS cluster",
    "SecurityGroupEgress": [
     {
      "CidrIp": "255.255.255.255/32",
      "Description": "Disallow all traffic",
      "FromPort": 252,
      "IpProtocol": "icmp",
      "ToPort": 86
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": {
       "Fn::ImportValue": "FraudDetection-EKS-dev:ExportsOutputFnGetAttFraudDetectionVPC6C86CF93CidrBlockCF35A4F7"
      },
      "Description": "Allow PostgreSQL access from VPC",
      "FromPort": 5432,
      "IpProtocol": "tcp",
      "ToPort": 5432
     }
    ],
    "VpcId": {
     "Fn::ImportValue": "FraudDetection-EKS-dev:ExportsOutputRefFraudDetectionVPC6C86CF93B032F32A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "FraudDetection-Services-dev/DbSecurityGroup/Resource"
   }
  },
  "DbCredentials798065DE": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "Description": "Database credentials for fraud detection system",
    "GenerateSecretString": {
     "ExcludeCharacters": "\"@/\\'",
     "GenerateStringKey": "password",
     "PasswordLength": 32,
     "SecretStringTemplate": "{\"username\":\"fraud_admin\"}"
    },
    "Name": "fraud-detection-db-credentials-dev"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "FraudDetection-Services-dev/DbCredentials/Resource"
   }
  },
  "DbCredentialsAttachmentD2151D4F": {
   "Type": "AWS::SecretsManager::SecretTargetAttachment",
   "Properties": {
    "SecretId": {
     "Ref": "DbCredentials798065DE"
    },
    "TargetId": {
     "Ref": "FraudDetectionDb4BDF56E5"
    },
    "TargetType": "AWS::RDS::DBCluster"
   },
   "Metadata": {
    "aws:cdk:path": "FraudDetection-Services-dev/DbCredentials/Attachment/Resource"
   }
  },
  "FraudDetectionDbSubnets30919EE0": {
   "Type": "AWS::RDS::DBSubnetGroup",
   "Properties": {
    "DBSubnetGroupDescription": "Subnets for FraudDetectionDb database",
    "SubnetIds": [
     {
      "Fn::ImportValue": "FraudDetection-EKS-dev:ExportsOutputRefFraudDetectionVPCDatabaseSubnet1Subnet5B83D15B97E9954F"
     },
     {
      "Fn::ImportValue": "FraudDetection-EKS-dev:ExportsOutputRefFraudDetectionVPCDatabaseSubnet2SubnetE0846FBEF406006B"
     },
     {
      "Fn::ImportValue": "FraudDetection-EKS-dev:ExportsOutputRefFraudDetectionVPCDatabaseSubnet3Subnet8538E471F5E8A750"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "FraudDetection-Services-dev/FraudDetectionDb/Subnets/Default"
   }
  },
  "FraudDetectionDbParameterGroupE7B18C29": {
   "Type": "AWS::RDS::DBClusterParameterGroup",
   "Properties": {
    "Description": "Cluster parameter group for aurora-postgresql14",
    "Family": "aurora-postgresql14",
    "Parameters": {
     "log_statement": "all",
     "log_min_duration_statement": "1000",
     "shared_preload_libraries": "pg_stat_statements"
    }
   },
   "Metadata": {
    "aws:cdk:path": "FraudDetection-Services-dev/FraudDetectionDb/ParameterGroup/Resource"
   }
  },
  "FraudDetectionDb4BDF56E5": {
   "Type": "AWS::RDS::DBCluster",
   "Properties": {
    "CopyTagsToSnapshot": true,
    "DatabaseName": "fraud_detection",
    "DBClusterParameterGroupName": {
     "Ref": "FraudDetectionDbParameterGroupE7B18C29"
    },
    "DBSubnetGroupName": {
     "Ref": "FraudDetectionDbSubnets30919EE0"
    },
    "Engine": "aurora-postgresql",
    "EngineVersion": "14.6",
    "MasterUsername": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Ref": "DbCredentials798065DE"
       },
       ":SecretString:username::}}"
      ]
     ]
    },
    "MasterUserPassword": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Ref": "DbCredentials798065DE"
       },
       ":SecretString:password::}}"
      ]
     ]
    },
    "Port": 5432,
    "PreferredMaintenanceWindow": "sun:04:00-sun:05:00",
    "StorageEncrypted": false,
    "VpcSecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "DbSecurityGroupE9D701AD",
       "GroupId"
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "FraudDetection-Services-dev/FraudDetectionDb/Resource"
   }
  },
  "FraudDetectionDbwriter556F40FD": {
   "Type": "AWS::RDS::DBInstance",
   "Properties": {
    "DBClusterIdentifier": {
     "Ref": "FraudDetectionDb4BDF56E5"
    },
    "DBInstanceClass": "db.r6g.large",
    "Engine": "aurora-postgresql",
    "PromotionTier": 0,
    "PubliclyAccessible": false
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "FraudDetection-Services-dev/FraudDetectionDb/writer/Resource"
   }
  },
  "CacheSubnetGroup": {
   "Type": "AWS::ElastiCache::SubnetGroup",
   "Properties": {
    "Description": "Subnet group for fraud detection Redis cluster",
    "SubnetIds": [
     {
      "Fn::ImportValue": "FraudDetection-EKS-dev:ExportsOutputRefFraudDetectionVPCPrivateSubnet1SubnetA688BB0B315965E0"
     },
     {
      "Fn::ImportValue": "FraudDetection-EKS-dev:ExportsOutputRefFraudDetectionVPCPrivateSubnet2Subnet4DC61FF15460072F"
     },
     {
      "Fn::ImportValue": "FraudDetection-EKS-dev:ExportsOutputRefFraudDetectionVPCPrivateSubnet3Subnet61A25A8792031BA1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "FraudDetection-Services-dev/CacheSubnetGroup"
   }
  },
  "RedisSecurityGroupB05951F6": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Security group for fraud detection Redis cluster",
    "SecurityGroupEgress": [
     {
      "CidrIp": "255.255.255.255/32",
      "Description": "Disallow all traffic",
      "FromPort": 252,
      "IpProtocol": "icmp",
      "ToPort": 86
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": {
       "Fn::ImportValue": "FraudDetection-EKS-dev:ExportsOutputFnGetAttFraudDetectionVPC6C86CF93CidrBlockCF35A4F7"
      },
      "Description": "Allow Redis access from VPC",
      "FromPort": 6379,
      "IpProtocol": "tcp",
      "ToPort": 6379
     }
    ],
    "VpcId": {
     "Fn::ImportValue": "FraudDetection-EKS-dev:ExportsOutputRefFraudDetectionVPC6C86CF93B032F32A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "FraudDetection-Services-dev/RedisSecurityGroup/Resource"
   }
  },
  "RedisCluster": {
   "Type": "AWS::ElastiCache::ReplicationGroup",
   "Properties": {
    "ReplicationGroupDescription": "Redis cluster for fraud detection caching",
    "AtRestEncryptionEnabled": true,
    "AutomaticFailoverEnabled": true,
    "CacheNodeType": "cache.r7g.large",
    "CacheParameterGroupName": "default.redis7",
    "CacheSubnetGroupName": {
     "Ref": "CacheSubnetGroup"
    },
    "Engine": "redis",
    "EngineVersion": "7.0",
    "MultiAZEnabled": true,
    "NumCacheClusters": 3,
    "PreferredMaintenanceWindow": "sun:05:00-sun:07:00",
    "ReplicationGroupId": "fraud-detection-redis-dev",
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "RedisSecurityGroupB05951F6",
       "GroupId"
      ]
     }
    ],
    "SnapshotRetentionLimit": 5,
    "SnapshotWindow": "03:00-05:00",
    "TransitEncryptionEnabled": true
   },
   "Metadata": {
    "aws:cdk:path": "FraudDetection-Services-dev/RedisCluster"
   }
  },
  "MskSecurityGroup2E58EEA4": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Security group for fraud detection MSK cluster",
    "SecurityGroupEgress": [
     {
      "CidrIp": "255.255.255.255/32",
      "Description": "Disallow all traffic",
      "FromPort": 252,
      "IpProtocol": "icmp",
      "ToPort": 86
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": {
       "Fn::ImportValue": "FraudDetection-EKS-dev:ExportsOutputFnGetAttFraudDetectionVPC6C86CF93CidrBlockCF35A4F7"
      },
      "Description": "Allow Kafka plaintext access from VPC",
      "FromPort": 9092,
      "IpProtocol": "tcp",
      "ToPort": 9092
     },
     {
      "CidrIp": {
       "Fn::ImportValue": "FraudDetection-EKS-dev:ExportsOutputFnGetAttFraudDetectionVPC6C86CF93CidrBlockCF35A4F7"
      },
      "Description": "Allow Kafka TLS access from VPC",
      "FromPort": 9094,
      "IpProtocol": "tcp",
      "ToPort": 9094
     },
     {
      "CidrIp": {
       "Fn::ImportValue": "FraudDetection-EKS-dev:ExportsOutputFnGetAttFraudDetectionVPC6C86CF93CidrBlockCF35A4F7"
      },
      "Description": "Allow ZooKeeper access from VPC",
      "FromPort": 2181,
      "IpProtocol": "tcp",
      "ToPort": 2181
     }
    ],
    "VpcId": {
     "Fn::ImportValue": "FraudDetection-EKS-dev:ExportsOutputRefFraudDetectionVPC6C86CF93B032F32A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "FraudDetection-Services-dev/MskSecurityGroup/Resource"
   }
  },
  "MskConfiguration": {
   "Type": "AWS::MSK::Configuration",
   "Properties": {
    "Name": "fraud-detection-msk-config-dev",
    "ServerProperties": "auto.create.topics.enable=false\ndefault.replication.factor=3\nmin.insync.replicas=2\nnum.partitions=12\ncompression.type=snappy\nlog.retention.hours=168\nlog.segment.bytes=1073741824\nlog.retention.check.interval.ms=300000\nmessage.max.bytes=1000000\nreplica.fetch.max.bytes=1048576\ngroup.initial.rebalance.delay.ms=3000",
    "Description": "MSK configuration for fraud detection system",
    "KafkaVersionsList": [
     "2.8.1"
    ]
   },
   "Metadata": {
    "aws:cdk:path": "FraudDetection-Services-dev/MskConfiguration"
   }
  },
  "MskCluster": {
   "Type": "AWS::MSK::Cluster",
   "Properties": {
    "BrokerNodeGroupInfo": {
     "ClientSubnets": [
      {
       "Fn::ImportValue": "FraudDetection-EKS-dev:ExportsOutputRefFraudDetectionVPCPrivateSubnet1SubnetA688BB0B315965E0"
      },
      {
       "Fn::ImportValue": "FraudDetection-EKS-dev:ExportsOutputRefFraudDetectionVPCPrivateSubnet2Subnet4DC61FF15460072F"
      },
      {
       "Fn::ImportValue": "FraudDetection-EKS-dev:ExportsOutputRefFraudDetectionVPCPrivateSubnet3Subnet61A25A8792031BA1"
      }
     ],
     "InstanceType": "kafka.m5.large",
     "SecurityGroups": [
      {
       "Fn::GetAtt": [
        "MskSecurityGroup2E58EEA4",
        "GroupId"
       ]
      }
     ],
     "StorageInfo": {
      "EBSStorageInfo": {
       "VolumeSize": 100
      }
     }
    },
    "ClusterName": "fraud-detection-msk-dev",
    "KafkaVersion": "2.8.1",
    "NumberOfBrokerNodes": 3,
    "ClientAuthentication": {
     "Sasl": {
      "Scram": {
       "Enabled": true
      }
     },
     "Tls": {
      "CertificateAuthorityArnList": []
     }
    },
    "ConfigurationInfo": {
     "Arn": {
      "Fn::GetAtt": [
       "MskConfiguration",
       "Arn"
      ]
     },
     "Revision": 1
    },
    "EnhancedMonitoring": "PER_BROKER",
    "LoggingInfo": {
     "BrokerLogs": {
      "CloudWatchLogs": {
       "Enabled": true,
       "LogGroup": "/aws/msk/fraud-detection-dev"
      },
      "S3": {
       "Bucket": {
        "Ref": "DataLakeBucket0256EA8E"
       },
       "Enabled": true,
       "Prefix": "msk-logs/"
      }
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "FraudDetection-Services-dev/MskCluster"
   }
  },
  "TransactionStreamC0357204": {
   "Type": "AWS::Kinesis::Stream",
   "Properties": {
    "Name": "fraud-detection-transactions-dev",
    "RetentionPeriodHours": 24,
    "ShardCount": 10,
    "StreamEncryption": {
     "EncryptionType": "KMS",
     "KeyId": "arn:aws:kms:us-west-2:527540700703:alias/aws/kinesis"
    }
   },
   "Metadata": {
    "aws:cdk:path": "FraudDetection-Services-dev/TransactionStream/Resource"
   }
  },
  "FraudAlertsStreamKeyBC3971D3": {
   "Type": "AWS::KMS::Key",
   "Properties": {
    "KeyPolicy": {
     "Statement": [
      {
       "Action": "kms:*",
       "Effect": "Allow",
       "Principal": {
        "AWS": "arn:aws:iam::527540700703:root"
       },
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Created by FraudDetection-Services-dev/FraudAlertsStream"
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "FraudDetection-Services-dev/FraudAlertsStream/Key/Resource"
   }
  },
  "FraudAlertsStream5355E234": {
   "Type": "AWS::Kinesis::Stream",
   "Properties": {
    "Name": "fraud-detection-alerts-dev",
    "RetentionPeriodHours": 168,
    "ShardCount": 2,
    "StreamEncryption": {
     "EncryptionType": "KMS",
     "KeyId": {
      "Fn::GetAtt": [
       "FraudAlertsStreamKeyBC3971D3",
       "Arn"
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "FraudDetection-Services-dev/FraudAlertsStream/Resource"
   }
  },
  "ModelMetricsStreamKey8AFD2DB7": {
   "Type": "AWS::KMS::Key",
   "Properties": {
    "KeyPolicy": {
     "Statement": [
      {
       "Action": "kms:*",
       "Effect": "Allow",
       "Principal": {
        "AWS": "arn:aws:iam::527540700703:root"
       },
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Created by FraudDetection-Services-dev/ModelMetricsStream"
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "FraudDetection-Services-dev/ModelMetricsStream/Key/Resource"
   }
  },
  "ModelMetricsStream4F097866": {
   "Type": "AWS::Kinesis::Stream",
   "Properties": {
    "Name": "fraud-detection-model-metrics-dev",
    "RetentionPeriodHours": 24,
    "ShardCount": 1,
    "StreamEncryption": {
     "EncryptionType": "KMS",
     "KeyId": {
      "Fn::GetAtt": [
       "ModelMetricsStreamKey8AFD2DB7",
       "Arn"
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "FraudDetection-Services-dev/ModelMetricsStream/Resource"
   }
  },
  "SageMakerExecutionRole7843F3B8": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "sagemaker.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonSageMakerFullAccess"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "FraudDetection-Services-dev/SageMakerExecutionRole/Resource"
   }
  },
  "SageMakerExecutionRoleDefaultPolicy2414594F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "DataLakeBucket0256EA8E",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "ModelBucketB33D855B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "DataLakeBucket0256EA8E",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ModelBucketB33D855B",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "SageMakerExecutionRoleDefaultPolicy2414594F",
    "Roles": [
     {
      "Ref": "SageMakerExecutionRole7843F3B8"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "FraudDetection-Services-dev/SageMakerExecutionRole/DefaultPolicy/Resource"
   }
  },
  "FraudDetectionModelGroup": {
   "Type": "AWS::SageMaker::ModelPackageGroup",
   "Properties": {
    "ModelPackageGroupName": "fraud-detection-models-dev",
    "ModelPackageGroupDescription": "Model package group for fraud detection models"
   },
   "Metadata": {
    "aws:cdk:path": "FraudDetection-Services-dev/FraudDetectionModelGroup"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/31SwU7DMAz9Fu5ZQOUAHNkmIYQQU8cdeZk3sjTJ5Digqeq/4yYV2jhw8st7r7Zf0kbf3+mbK/hOM7N1s85udL9mME4J9dE7n3T/gie12AUpg0q3up9n45BHqqJB0VZs67wJyE8U83HUlvNzYgkMG0i46HJiJLUCAo+CzvyT9o9UD88hMQSDg0LTyFw0mSyffu0XhKyMhpCThwB7pOKnuv6EankH2iM/soT/9BjODH8VmdtBYmvkjLoffZfRWzx2orKNYdrBJ1eMixh2dp+paKN1CjYoZwMmO14jE4Iv0wsalAWv+zZ2WHqPdRWlf3mUiiSkZPPgJJ+Qr3GL3UoeUchpgRZTzGRKi7fMx8x10coOKsgn+pCuv5pGP8gPcUjWzigHth51W+sPj9OGiywCAAA="
   },
   "Metadata": {
    "aws:cdk:path": "FraudDetection-Services-dev/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "SageMakerModelGroup": {
   "Description": "SageMaker Model Package Group Name",
   "Value": "fraud-detection-models-dev"
  },
  "RdsClusterEndpoint": {
   "Description": "RDS Cluster Endpoint",
   "Value": {
    "Fn::GetAtt": [
     "FraudDetectionDb4BDF56E5",
     "Endpoint.Address"
    ]
   }
  },
  "RdsClusterReadEndpoint": {
   "Description": "RDS Cluster Read Endpoint",
   "Value": {
    "Fn::GetAtt": [
     "FraudDetectionDb4BDF56E5",
     "ReadEndpoint.Address"
    ]
   }
  },
  "RedisClusterEndpoint": {
   "Description": "Redis Cluster Primary Endpoint",
   "Value": {
    "Fn::GetAtt": [
     "RedisCluster",
     "PrimaryEndPoint.Address"
    ]
   }
  },
  "RedisClusterPort": {
   "Description": "Redis Cluster Port",
   "Value": {
    "Fn::GetAtt": [
     "RedisCluster",
     "PrimaryEndPoint.Port"
    ]
   }
  },
  "MskClusterArn": {
   "Description": "MSK Cluster ARN",
   "Value": {
    "Ref": "MskCluster"
   }
  },
  "DataLakeBucketName": {
   "Description": "Data Lake S3 Bucket Name",
   "Value": {
    "Ref": "DataLakeBucket0256EA8E"
   }
  },
  "ModelBucketName": {
   "Description": "Model Storage S3 Bucket Name",
   "Value": {
    "Ref": "ModelBucketB33D855B"
   }
  },
  "TransactionStreamName": {
   "Description": "Kinesis Transaction Stream Name",
   "Value": {
    "Ref": "TransactionStreamC0357204"
   }
  },
  "TransactionStreamArn": {
   "Description": "Kinesis Transaction Stream ARN",
   "Value": {
    "Fn::GetAtt": [
     "TransactionStreamC0357204",
     "Arn"
    ]
   }
  },
  "ExportsOutputRefFraudDetectionDb4BDF56E5A1EBCA47": {
   "Value": {
    "Ref": "FraudDetectionDb4BDF56E5"
   },
   "Export": {
    "Name": "FraudDetection-Services-dev:ExportsOutputRefFraudDetectionDb4BDF56E5A1EBCA47"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}